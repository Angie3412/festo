<?php

namespace App\Http\Controllers;

use Illuminate\Http\Request;
use App\Models\Herramienta;
use App\Models\CarritoTools;
use Illuminate\Support\Facades\Log;
use Illuminate\Support\Facades\Auth;



class SolicitudController extends Controller
{
    /**
     * Display a listing of the resource.
     *
     * @return \Illuminate\Http\Response
     */
    public function index()
    {
        //
    }

    /**
     * Show the form for creating a new resource.
     *
     * @return \Illuminate\Http\Response
     */
    public function create(Request $request)
    {
        $user = auth()->user();
        $solicituditems = CarritoTools::where('user_identity', $user->user_identity)->get();

        $solicituditemsArray = [];

        foreach ($solicituditems as $item) {
            $itemArray = [];
            if ($item->herramienta) {                
                $itemArray = [
                    'id' => $item->herramienta->id,
                    'nombre' => $item->herramienta->nombre,
                    'cod_herramienta' => $item->herramienta->cod_herramienta,
                    'cantidad' => $item->cantidad,
                    /*'id_instructor' => $item->herramienta->user_identity,*/
                ];
            } 
            $solicituditemsArray[] = $itemArray;
        }

        return view('solicitudes.create', compact('solicituditemsArray'));
    }


    /**
     * Store a newly created resource in storage.
     *
     * @param  \Illuminate\Http\Request  $request
     * @return \Illuminate\Http\Response
     */
    public function store(Request $request)
    {
        Log::info('Método store llamado');
        
        // Validar los datos del formulario
        $validated = $request->validate([
            'nombre' => 'required|string',
            'email' => 'required|email',
            'telefono' => 'required|numeric',
            'fecha' => 'required|date',
            'hora' => 'required|date_format:H:i',
            'solicituditemsArray' => 'required|array',
            'solicituditemsArray.*.id' => 'required|exists:carritoTools,id',
            'solicituditemsArray.*.cantidad' => 'required|integer|min:1',
        ]);
    
        // Mostrar los datos validados para depuración
        Log::info('Datos validados: ', $validated);
        
        // Crear la solicitud
        $solicitud = new Solicitud();
        $solicitud->nombre = $request->input('nombre');
        $solicitud->email = $request->input('email');
        $solicitud->telefono = $request->input('telefono');
        $solicitud->fecha = $request->input('fecha');
        $solicitud->hora = $request->input('hora');
        $solicitud->save();
    
        // Guardar los detalles de la solicitud
        foreach ($request->input('solicituditemsArray') as $item) {
            $detalle = new DetalleSolicitud();
            $detalle->solicitud_id = $solicitud->id;
            $detalle->herramienta_id = $item['id'];
            $detalle->cantidad = $item['cantidad'];
            $detalle->save();
        }
    
        return redirect()->route('solicitudes.index')->with('success', 'Solicitud realizada con éxito');
    }
    
    
    
    /**
     * Display the specified resource.
     *
     * @param  int  $id
     * @return \Illuminate\Http\Response
     */
    public function show($id)
    {
        //
    }

    /**
     * Show the form for editing the specified resource.
     *
     * @param  int  $id
     * @return \Illuminate\Http\Response
     */
    public function edit($id)
    {
        //
    }

    /**
     * Update the specified resource in storage.
     *
     * @param  \Illuminate\Http\Request  $request
     * @param  int  $id
     * @return \Illuminate\Http\Response
     */
    public function update(Request $request, $id)
    {
        //
    }

    /**
     * Remove the specified resource from storage.
     *
     * @param  int  $id
     * @return \Illuminate\Http\Response
     */
    public function destroy($id)
    {
        //
    }
}
